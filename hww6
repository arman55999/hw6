//recursiuon

const sp1 = function(num_Spaces1){
	if(num1Spaces === 0){
		return '';
	}
	return ' ' + sp1(num_Spaces1-1);
};
const char1 = function(num_Chars1, char){
	if(num_Chars1 === 0){
		return '';
	}
	return char + char1(num_Chars1-1, char);
};
const helper1 = function(space1, str1, char){
	if(spc1<=0){
		return '';
	}
	console.log( sp1(space1) + char1(str1, char) );
	return helper1(space1-1, str1+2, char);
};
const DiamondUp = function(height_1, char){
  if(height_1%2 === 0){
      return;
  }

  if((height_1-1)%2 === 0){
    
    if(((height_1-1)/2)%2 === 1){
      if(((height_1-1)/2)%2 === 1){
        helper1(height_1-((height_1+1)/2-1), 1, char);
        
      }
      else{helper1(height_1-2, 1, char);}
    }
    else{helper1(height_1-((height_1+1)/2-1), 1, char);}
  }
};



const sp2 = function(num_Spaces2){
	if(num_Spaces2 === 0){
		return '';
	}
	return ' ' + sp2(num_Spaces2-1);
};
const char2 = function(num_Chars2, char){
	if(num_Chars2 === 0){
		return '';
	}
	return char + char2(num_Chars2-1, char);
};
const helper2 = function(space2, str2, char){
	if(str2<=0){
		return '';
	}
	console.log( ' ' + sp2(space2) + char2(str2, char) );
	return helper2(space2+1, str2-2, char);
};
const printDiamondDown = function(height_2, char){
  if(height_2%2 === 0){
    return;
  }else{helper2(1, height_2-2, char);}
};


const printDiamond = function(height, char){
	printDiamondUp(height, char);

	printDiamondDown(height, char);
};
printDiamond(5, '@');




//looping
const chars = function(height, char){
    let store_1 = '';
    for(let i = 0; i <= height; i++){
         = store_1 + char;
    }
    return store_1;
};

const spaces = function(height){
    let store_2 = '';
    for(let i = 0; i <= height; i++){
        store_2 = store_2 + ' ';
    }
    return store2;
};

const printDiamond = function(height, char){
  if(height%2 === 0){  
      height = height + 1;
  }
  for(let i = 0; i <= height; i = i + 2){
	    console.log(spaces((height-i)/2) + chars(i, char));
  }

  for(let i = height - 2; i >= 1; i = i - 2){
	    console.log(spaces((height - i)/2) + chars(i - 1, char));
  }
};
printDiamond(5, '#');





//tictac 
const board = [
      	 ['1', '2', ''],
      	 ['4', '', '6'],
   	  	 ['7', '', '']
	    ];

Array.prototype.random = function () {
  	return this[Math.floor((Math.random()*this.length))];
};
  	b1 = board;
	console.log(a.random().random());
  
const rand = function(min, max){
  	const num = Math.floor(Math.random() * (max - min + 1)) + min;
};              

const check = function(board){

  const empty = [];
  	for(let i = 0; i <= 2; i++){
       for(let j = 0; j <=2; j++){
          if(board[i][j] === ''){
          	free.push([i,j]);
          }
       }
    }
  return free;
};
const array_1 = checker(board);
console.log(array_1);

const next_move = function(){
    const put = array_1.random();
board[put[0]][put[1]]='x';
};

next_move();


console.log(board)
